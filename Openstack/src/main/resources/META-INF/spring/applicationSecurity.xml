<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<http request-matcher="ciRegex" pattern="/user/login(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/user/loginfailed(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/user/reg(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/regForm(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/resetPassword(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/forgetPswForm(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/userReg(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/user/doReg(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/user/.*?/login(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/admin/login(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/admin/loginfailed(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/agent/login(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/agent/loginfailed(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/agent/reg(/?)(\?.*){0,1}" security="none"/>
	<http request-matcher="ciRegex" pattern="/agent/doReg(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/scripts/bootstrap(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/scripts/template(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/pay/alipay(/?)(\?.*){0,1}" security="none"/>
    <http request-matcher="ciRegex" pattern="/user/activeUser(/?)(\?.*){0,1}" security="none"/>
   
	<http pattern="/*.jsp" security="none"/>
    <http pattern="/resource/**" security="none"/>
	
   <security:http pattern="/user/**"  auto-config="true" access-denied-page="/user/login" >
        <security:form-login login-page="/user/login" login-processing-url="/user/doLogin" 
        		authentication-failure-url="/user/loginfailed" default-target-url="/user" always-use-default-target="true"/>  
        <security:logout logout-url="/user/doLogout" logout-success-url="/user/login" />  
        <security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter"/>
   </security:http>
   
   <security:http pattern="/admin/**" auto-config="true" access-denied-page="/admin/login" >
        <security:form-login login-page="/admin/login" login-processing-url="/admin/doLogin" 
        		authentication-failure-url="/admin/loginfailed" default-target-url="/admin" always-use-default-target="true"/>  
        <security:logout logout-url="/admin/doLogout" logout-success-url="/admin/login" />  
        <security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter" />
   </security:http>
   
   <security:http pattern="/agent/**" auto-config="true" access-denied-page="/agent/login" >
        <security:form-login login-page="/agent/login" login-processing-url="/agent/doLogin" 
        		authentication-failure-url="/agent/loginfailed" default-target-url="/agent" always-use-default-target="true"/>  
        <security:logout logout-url="/agent/doLogout" logout-success-url="/agent/login" />  
        <security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="securityFilter"/>
   </security:http>
   
    <beans:bean id="securityFilter" class="com.inforstack.openstack.security.auth.OpenstackSecurityFilter">
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="accessDecisionManager" ref="accessDecisionManager" />
        <beans:property name="securityMetadataSource" ref="securityMetadataSource" />
        <beans:property name="rejectPublicInvocations" value="true" />
    </beans:bean>
   
	<beans:bean id="org.springframework.security.authenticationManager" 
			class="org.springframework.security.authentication.ProviderManager">
		<beans:property name="providers">
			<beans:list>
				<beans:ref bean="daoAuthenticationProvider"/>
			</beans:list>
		</beans:property>
		<beans:property name="authenticationEventPublisher" ref="authenticationEventPublisher" />
	</beans:bean>
	<beans:alias name="org.springframework.security.authenticationManager" alias="authenticationManager"/>
	
	<beans:bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService"/>
		<beans:property name="passwordEncoder" ref="passwordEncoder"/>
	</beans:bean>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" />
	
	
</beans:beans>
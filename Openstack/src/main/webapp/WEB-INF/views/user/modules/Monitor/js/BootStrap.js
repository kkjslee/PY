// JavaScript Document
// Author: Bill, 2011
 /*<!--#include virtual="../../../config.shtml" -->*/

var _DEBUG_=false;var scriptToLoad=["../../locale.jsp?_module=Monitor","js/template.js"];$(function(){BootLoader.init();BootLoader.prepareScriptSerial(scriptToLoad,function(){registerTemplate();setup();initAjax();initUi()})});function getURLParameter(name){return decodeURI((RegExp(name+'='+'(.+?)(&|$)').exec(location.search)||[,null])[1])}function registerTemplate(){$.template("monitorPanelTemplate",Template_MonitorPanel);$.template("monitorRowTemplate",Template_MonitorRow);$.template("monitorDialogTemplate",Template_MonitorDialog);$.template("messageBoxTemplate",Template_MessageBox)}function setup(){$("#mainBody").empty();var panel=$.tmpl("monitorPanelTemplate",[{id:"monitorPanel"}]).appendTo("#mainBody");$(panel).find("[name='uptimeTabs']").tabs({show:function(event,ui){redrawUptime(ui.panel.id)}}).find(".ui-tabs-nav").sortable({axis:"x"});$(panel).delegate(".Row","click",function(){if(!$(this).is(".selected")){$(this).addClass("selected");$(this).siblings(".Row").removeClass("selected");var ip=$(this).find("input[name='monitorIp']").val();loadUptime(ip)}});loadMonitors()}function initUi(){$("button").button();$("#banner").html(Locale["monitor.banner"])}function initAjax(){jQuery.support.cors=true;$(document).ajaxStart(function(){$("#loadingIcon").show()}).ajaxStop(function(){$("#loadingIcon").hide()})}function printError(jqXHR,textStatus,errorThrown){printMessage("Connection Broken: "+textStatus+", "+errorThrown)}function printMessage(msg){return $.tmpl("messageBoxTemplate",[{message:msg}]).appendTo("#mainBody").dialog({resizable:false,modal:true,buttons:[{text:Locale["monitor.dialog.close"],click:function(){$(this).dialog("destroy")}}]})}function showProcessingDialog(){var view=$("<div style='text-align:center;'><img src='css/image/progress.gif'/>"+Locale["monitor.dialog.processing"]+"</div>").dialog({autoOpen:true,width:240,height:100,resizable:false,modal:true,closeOnEscape:false,open:function(event,ui){$(".ui-dialog-titlebar-close").hide()},buttons:{}});return view}function loadMonitors(){var list=$("#monitorPanel").find("[zmlm\\\:item='monitorList']").empty();$("<em class='tipsLabel'>"+Locale["monitor.message.loading"]+"</em>").appendTo(list);$.ajax({type:"POST",url:Server+"/CloudWatch/GetList",cache:false,data:{Username:getUsername()},success:function(data){var dataTable=$(list).parents("table").first();$(dataTable).dataTable().fnDestroy();try{data=$.parseJSON(data);var tasks=$.map(data.Tasks,function(elementOfArray,indexInArray){return{name:elementOfArray[0],ip:elementOfArray[1],frequency:elementOfArray[2],status:elementOfArray[3]}});if(tasks.length>0){var datalist=$.tmpl("monitorRowTemplate",tasks).appendTo($(list).empty())}else{$("<em>"+Locale["monitor.message.no_data"]+"</em>").appendTo($(list).empty())}}catch(e){printMessage("Data Broken: ["+e+"]")}$(dataTable).dataTable(BootLoader.conf.dataTable(dataTable))},error:function(jqXHR,textStatus,errorThrown){printError(jqXHR,textStatus,errorThrown)}})}function loadUptime(ip){!BootLoader.cache.uptimepool&&(BootLoader.cache.uptimepool=[]);$(BootLoader.cache.uptimepool).each(function(){this.abort()}).empty();showLoadingIcon();var request=$.ajax({type:"POST",url:Server+"/CloudWatch/GetAvail",cache:false,data:{IP:ip},success:function(data){try{data=$.parseJSON(data);$("[name='uptimePanel']").data("ip",ip);$("[name='uptimePanel']").data("data",data);var selecting=$("[name='uptimePanel'] .ui-tabs-panel:not(.ui-tabs-hide)").attr("id");redrawUptime(selecting)}catch(e){printMessage("Data Broken: ["+e+"]")}},error:function(jqXHR,textStatus,errorThrown){},complete:function(){hideLoadingIcon()}});BootLoader.cache.uptimepool.push(request)}function redrawUptime(which){var ip=$("[name='uptimePanel']").data("ip");var data=$("[name='uptimePanel']").data("data");if(ip&&data){switch(which){case"_history":{BootLoader.log("Drawing availibility history graph.");var chart,dataToLoad;BootLoader.cache.hchart&&BootLoader.cache.hchart.destroy();chart=new Highcharts.Chart({chart:{renderTo:"_historyChart",type:"spline",height:190,plotBackgroundColor:null},title:{text:ip},xAxis:{type:"datetime",title:{text:null},labels:{staggerLines:2,formatter:function(){return Highcharts.dateFormat('%e %b %H:%M',this.value)}}},yAxis:{title:{text:null},startOnTick:false,endOnTick:false,max:100,min:0,labels:{formatter:function(){return this.value+" %"}}},tooltip:{formatter:function(){return'<b>'+this.series.name+'</b><br/>'+Highcharts.dateFormat('%e %b %H:%M',this.x)+': '+Highcharts.numberFormat(this.y,2)+" %"}},legend:{enabled:false},credits:{enabled:false},showLastLabel:false});dataToLoad=data.Avail;BootLoader.cache.hchart=chart;chart.addSeries({name:Locale["monitor.template.label.availability"],data:dataToLoad});break}case"_summary":{BootLoader.log("Drawing availibility summary graph.");BootLoader.cache.schart&&BootLoader.cache.schart.destroy();var a=0,d=0;for(var i=0;i<data.Avail.length;i++){a+=parseInt(data.Avail[i][1]);d+=100-parseInt(data.Avail[i][1])}var summary=[[Locale["monitor.template.label.summary.avail"],a],[Locale["monitor.template.label.summary.down"],d]];var chart=new Highcharts.Chart({chart:{renderTo:"_summaryChart",type:"pie",height:190},title:{text:ip},tooltip:{formatter:function(){return this.point.name+': '+Highcharts.numberFormat(this.percentage,2)+" %"}},plotOptions:{pie:{allowPointSelect:true,cursor:'pointer',dataLabels:{distance:10,enabled:true,formatter:function(){return'<b>'+this.point.name+'</b>: '+Highcharts.numberFormat(this.percentage,2)+' %'}},showInLegend:true},},legend:{layout:'vertical',align:'center',verticalAlign:'middle',x:220,borderWidth:0,symbolWidth:40,labelFormatter:function(){return'<b>'+this.name+'</b> '}},credits:{enabled:false}});BootLoader.cache.schart=chart;chart.addSeries({name:Locale["monitor.template.label.availability"],data:summary});break}case"_logging":{BootLoader.log("Loading availibility logging.");var logs=$.map(data.Down,function(elementInArray,indexOfArray){return{down:elementInArray[0],back:elementInArray[1],interval:elementInArray[2]}});(logs&&logs.length>0&&$("#_logging tbody").empty())||($("<tr><td>%s</td><td>%s</td><td>%s</td></tr>".sprintf(Locale["monitor.template.label.foo"],Locale["monitor.template.label.foo"],Locale["monitor.template.label.foo"])).appendTo($("#_logging tbody").empty()));for(var i=0;i<logs.length;i++){$("<tr><td>%s</td><td>%s</td><td>%s</td></tr>".sprintf((logs[i].down&&logs[i].down!="n/a"&&Highcharts.dateFormat('%e %b %H:%M:%S',logs[i].down))||Locale["monitor.template.label.foo"],(logs[i].back&&logs[i].back!="n/a"&&Highcharts.dateFormat('%e %b %H:%M:%S',logs[i].back))||Locale["monitor.template.label.foo"],(logs[i].interval&&logs[i].interval!="n/a"&&formatInterval(logs[i].interval))||Locale["monitor.template.label.foo"])).appendTo($("#_logging tbody"))}BootLoader.cache.currentChart=null;BootLoader.cache.currentIp=ip;break}}}}function updateMonitor(which,status){var monitorIp=$(which).parents(".Row").first().find("input[name='monitorIp']").val();var monitorName=$(which).parents(".Row").first().find("input[name='monitorName']").val();var monitorFreq=$(which).parents(".Row").first().find("input[name='monitorFreq']").val();if(!confirm(Locale["monitor.confirm.update"].sprintf(status=="monitoring"?Locale["monitor.template.monitor.resume"]:Locale["monitor.template.monitor.pause"],monitorName)))return;var pd=showProcessingDialog();$.ajax({type:"POST",url:Server+"/CloudWatch/UpdateTask",cache:false,data:{Username:getUsername(),TaskName:monitorName,TaskFreq:monitorFreq,TaskIp:monitorIp,TaskStatus:status},success:function(data){try{data=$.parseJSON(data);var msg="";switch(data.status){case"done":msg=Locale["monitor.message.update.done"];break;case"error":;case"exception":msg=Locale["monitor.message.error"];break;default:msg=Locale["monitor.message.undefined"].sprintf(data.status)}printMessage(msg);loadMonitors()}catch(e){printMessage("Data Broken: ["+e+"]")}},error:function(jqXHR,textStatus,errorThrown){printError(jqXHR,textStatus,errorThrown)},complete:function(){pd.dialog("destroy")}})}function removeMonitor(which){var monitorIp=$(which).parents(".Row").first().find("input[name='monitorIp']").val();var monitorName=$(which).parents(".Row").first().find("input[name='monitorName']").val();if(!confirm(Locale["monitor.confirm.remove"].sprintf(monitorName)))return;var pd=showProcessingDialog();$.ajax({type:"POST",url:Server+"/CloudWatch/DeleteTask",cache:false,data:{Username:getUsername(),TaskIp:monitorIp},success:function(data){try{data=$.parseJSON(data);var msg="";switch(data.status){case"done":msg=Locale["monitor.message.remove.done"];break;case"error":;case"exception":msg=Locale["monitor.message.error"];break;default:msg=Locale["monitor.message.undefined"].sprintf(data.status)}printMessage(msg);loadMonitors()}catch(e){printMessage("Data Broken: ["+e+"]")}},error:function(jqXHR,textStatus,errorThrown){printError(jqXHR,textStatus,errorThrown)},complete:function(){pd.dialog("destroy")}})}function showUpdateMonitorDialog(which){var oldIp=$(which).parents(".Row").first().find("input[name='monitorIp']").val();var oldName=$(which).parents(".Row").first().find("input[name='monitorName']").val();var oldFreq=$(which).parents(".Row").first().find("input[name='monitorFreq']").val();var oldStatus=$(which).parents(".Row").first().find("input[name='monitorStatus']").val();var vmdialog=$.tmpl("monitorDialogTemplate",[{id:"updateMonitorDialog"}]).dialog({title:Locale["monitor.dialog.title.update"],autoOpen:true,resizable:false,modal:true,create:function(event,ui){$(this).find("[name='monitorName']").val(oldName);var freqList=$(this).find("[name='monitorFreq']").empty();var freqOpt=$.parseJSON("<!--#echo var='monitor.frequency.options'-->");for(var i=0;i<freqOpt.length;i++){$(['<input name="frequency" ',freqOpt[i]==oldFreq?'checked="checked"':'','value="'+freqOpt[i]+'" id="_freq'+freqOpt[i]+'min" type="radio" />','<label for="_freq'+freqOpt[i]+'min">',freqOpt[i]," ",Locale["monitor.template.label.interval.minute"],'</label>'].join("")).appendTo(freqList)}$(freqList).buttonset();var availIpOpt=$(this).find("[name='monitorIp']");$(["<option value='"+oldIp+"'>"+oldIp+"</option>"]).appendTo($(availIpOpt).empty());$(availIpOpt).attr("disabled","disabled")},close:function(){BootLoader.log("Closing dialog.");$(this).remove()},buttons:[{text:Locale["monitor.dialog.modify"],click:function(){var monitorName=$(this).find("[name='monitorName']").val();var monitorIp=oldIp;var monitorFreq=$(this).find("[name='frequency']:checked").val();var monitorStatus=oldStatus;if(!/<!--#echo var='RegExp_Monitor'-->/.test(monitorName)){printMessage(Locale["monitor.message.type.in.monitor.name"]);return};if(!monitorIp){printMessage(Locale["monitor.message.type.in.monitor.ip"]);return};if(confirm(Locale["monitor.confirm.modify"])){modifyMonitor(monitorName,monitorIp,monitorFreq,monitorStatus);$(this).dialog("close")}}},{text:Locale["monitor.dialog.close"],click:function(){$(this).dialog("close")}}]})}function showCreateMonitorDialog(which){var vmdialog=$.tmpl("monitorDialogTemplate",[{id:"createMonitorDialog"}]).dialog({title:Locale["monitor.dialog.title.create"],autoOpen:true,resizable:false,modal:true,create:function(event,ui){var freqList=$(this).find("[name='monitorFreq']").empty();var freqOpt=$.parseJSON("<!--#echo var='monitor.frequency.options'-->");for(var i=0;i<freqOpt.length;i++){$(['<input name="frequency" ',!i?'checked="checked"':'','value="'+freqOpt[i]+'" id="_freq'+freqOpt[i]+'min" type="radio" />','<label for="_freq'+freqOpt[i]+'min">',freqOpt[i]," ",Locale["monitor.template.label.interval.minute"],'</label>'].join("")).appendTo(freqList)}$(freqList).buttonset();var availIpOpt=$(this).find("[name='monitorIp']");getAvailableIp(availIpOpt)},close:function(){BootLoader.log("Closing dialog.");$(this).remove()},buttons:[{text:Locale["monitor.dialog.create"],click:function(){var monitorName=$(this).find("[name='monitorName']").val();var monitorIp=$(this).find("[name='monitorIp']").val();var monitorFreq=$(this).find("[name='frequency']:checked").val();if(!/<!--#echo var='RegExp_Monitor'-->/.test(monitorName)){printMessage(Locale["monitor.message.type.in.monitor.name"]);return};if(!monitorIp){printMessage(Locale["monitor.message.type.in.monitor.ip"]);return};if(confirm(Locale["monitor.confirm.create"])){createMonitor(monitorName,monitorIp,monitorFreq);$(this).dialog("close")}}},{text:Locale["monitor.dialog.close"],click:function(){$(this).dialog("close")}}]})}function modifyMonitor(monitorName,monitorIp,monitorFreq,monitorStatus){var pd=showProcessingDialog();$.ajax({type:"POST",url:Server+"/CloudWatch/UpdateTask",cache:false,data:{Username:getUsername(),TaskName:monitorName,TaskIp:monitorIp,TaskFreq:monitorFreq,TaskStatus:monitorStatus},success:function(data){try{data=$.parseJSON(data);var msg="";switch(data.status){case"done":msg=Locale["monitor.message.modify.done"];break;case"error":;case"exception":msg=Locale["monitor.message.error"];break;default:msg=Locale["monitor.message.undefined"].sprintf(data.status)}printMessage(msg);loadMonitors()}catch(e){printMessage("Data Broken: ["+e+"]")}},error:function(jqXHR,textStatus,errorThrown){printError(jqXHR,textStatus,errorThrown)},complete:function(){pd.dialog("destroy")}})}function createMonitor(monitorName,monitorIp,monitorFreq){var pd=showProcessingDialog();$.ajax({type:"POST",url:Server+"/CloudWatch/CreateTask",cache:false,data:{Username:getUsername(),TaskName:monitorName,TaskIp:monitorIp,TaskFreq:monitorFreq},success:function(data){try{data=$.parseJSON(data);var msg="";switch(data.status){case"done":msg=Locale["monitor.message.create.done"];break;case"error":;case"exception":msg=Locale["monitor.message.error"];break;default:msg=Locale["monitor.message.undefined"].sprintf(data.status)}printMessage(msg);loadMonitors()}catch(e){printMessage("Data Broken: ["+e+"]")}},error:function(jqXHR,textStatus,errorThrown){printError(jqXHR,textStatus,errorThrown)},complete:function(){pd.dialog("destroy")}})}function getAvailableIp(container){$(["<option value=''>",Locale["monitor.message.loading"],"</option>"].join("")).appendTo($(container).empty());$.ajax({type:"POST",url:Server+"/CloudWatch/GetList",cache:false,data:{Username:getUsername()},success:function(data){try{data=$.parseJSON(data).Ips;$(container).empty();if(data.length>0){for(var i=0;i<data.length;i++){$(["<option value='"+data[i]+"'>",data[i],"</option>"].join("")).appendTo(container)}}else{$(["<option value=''>",Locale["monitor.template.label.noavailableip"],"</option>"].join("")).appendTo(container)}}catch(e){printMessage("Data Broken: ["+e+"]")}},error:function(jqXHR,textStatus,errorThrown){printError(jqXHR,textStatus,errorThrown)}})}function showLoadingIcon(){$("[name='loadingIcon']").show()}function hideLoadingIcon(){$("[name='loadingIcon']").hide()}function formatStatus(status){if(status){switch(status){case"monitoring":return"<green>"+Locale["monitor.template.label.status.monitoring"]+"</green>";case"pause":return"<orange>"+Locale["monitor.template.label.status.pause"]+"</orange>"}}return status}function formatInterval(interval){var units=[Locale["monitor.template.label.interval.second"],Locale["monitor.template.label.interval.minute"],Locale["monitor.template.label.interval.hour"]];if(interval){interval=parseInt(interval);var u=0;while(59<interval&&u<(units.length-1)){interval/=60;u++}return(u?interval.toFixed(0):interval)+" "+units[u]}return null}